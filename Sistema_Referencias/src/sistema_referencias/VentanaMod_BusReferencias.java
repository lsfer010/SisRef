/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistema_referencias;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lsfer
 */
public class VentanaMod_BusReferencias extends javax.swing.JFrame {

    /**
     * Creates new form VentanaMod_BusReferencias
     */
    public VentanaMod_BusReferencias() {
        initComponents();
        actualizarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tBuscar = new javax.swing.JTextField();
        bBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabReferencias = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        tIDReferencia = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tIDTexActual = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tIDTexReferenciado = new javax.swing.JTextField();
        bModificar = new javax.swing.JButton();
        bCerrar = new javax.swing.JButton();
        comboColumnas = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Buscar por:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 21, -1, -1));
        getContentPane().add(tBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(229, 17, 100, -1));

        bBuscar.setText("Buscar");
        bBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(bBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(335, 13, 144, -1));

        tabReferencias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID Referencia", "ID Texto Actual", "ID Texto Referenciado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabReferencias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabReferenciasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabReferencias);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 64, -1, -1));

        jLabel2.setText("ID Referencia:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(483, 174, -1, -1));

        tIDReferencia.setEnabled(false);
        getContentPane().add(tIDReferencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(623, 170, 151, -1));

        jLabel3.setText("ID Texto Actual:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(483, 234, -1, -1));
        getContentPane().add(tIDTexActual, new org.netbeans.lib.awtextra.AbsoluteConstraints(623, 230, 151, -1));

        jLabel4.setText("ID Texto Referenciado:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(483, 304, -1, -1));
        getContentPane().add(tIDTexReferenciado, new org.netbeans.lib.awtextra.AbsoluteConstraints(623, 300, 151, -1));

        bModificar.setText("Modificar");
        bModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bModificarActionPerformed(evt);
            }
        });
        getContentPane().add(bModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(499, 385, 112, -1));

        bCerrar.setText("Cerrar");
        bCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCerrarActionPerformed(evt);
            }
        });
        getContentPane().add(bCerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(648, 385, 112, -1));

        comboColumnas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID Referencia", "ID Texto Actual", "ID Texto Referenciado" }));
        getContentPane().add(comboColumnas, new org.netbeans.lib.awtextra.AbsoluteConstraints(96, 16, 115, -1));

        jPanel1.setBackground(new java.awt.Color(255, 204, 0));

        jLabel12.setBackground(new java.awt.Color(0, 0, 0));
        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel12.setText("SISLIB.");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(633, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addGap(44, 44, 44))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addContainerGap(446, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 790, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCerrarActionPerformed
        this.dispose();
        actualizarTabla();
    }//GEN-LAST:event_bCerrarActionPerformed

    private void bBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBuscarActionPerformed
        String texto = tBuscar.getText();
        String campo = comboColumnas.getSelectedItem().toString();
        String where = "";
        
        if (campo.equals("ID Referencia")) {
            where = " WHERE id_referencia = " + texto;
        } else if (campo.equals("ID Texto Actual")) {
            where = " WHERE id_texto_actual = " + texto;
        } else if (campo.equals("ID Texto Referenciado")) {
            where = " WHERE id_texto_destino = " + texto;
        }
        
        if ("".equals(texto)) {
            where = "";
        }
        
        try {
            DefaultTableModel modelo = new DefaultTableModel();
            tabReferencias.setModel(modelo);
            
            PreparedStatement ps = null;
            ResultSet rs = null;
            Conexion connection = new Conexion();
            Connection con = connection.getConexion();
            
            String sql = "SELECT id_referencia, id_texto_actual, id_texto_destino FROM referencia" + where;
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            
            ResultSetMetaData rsMd = rs.getMetaData();
            int cantidadColumnas = rsMd.getColumnCount();
            modelo.addColumn("ID Referencia");
            modelo.addColumn("ID Texto Actual");
            modelo.addColumn("ID Texto Referenciado");
            
            while(rs.next()) {
                Object[] filas = new Object[cantidadColumnas]; //ya que la tabla trabaja con objetos, metemos todo en objetos
                
                for (int i=0; i < cantidadColumnas; i++) {
                    filas[i] = rs.getObject(i + 1);
                }
                
                modelo.addRow(filas);
            }
            
            con.close();
            
        } catch (SQLException ex) {
            JOptionPane.showInputDialog("Error:" + ex);
        }
    }//GEN-LAST:event_bBuscarActionPerformed

    private void bModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bModificarActionPerformed
        if (!tIDReferencia.getText().equals("")) {
            Conexion connection = new Conexion();
            Connection con = connection.getConexion();
            PreparedStatement ps = null;
            
            try {
                ps = con.prepareStatement("UPDATE referencia SET id_texto_actual=?, id_texto_destino=? WHERE id_referencia=?");
                ps.setInt(1, Integer.parseInt(tIDTexActual.getText()));
                ps.setInt(2, Integer.parseInt(tIDTexReferenciado.getText()));
                ps.setInt(3, Integer.parseInt(tIDReferencia.getText()));
                
                int res = ps.executeUpdate();
                
                if(res > 0) {
                    JOptionPane.showInputDialog("Referencia modificada");
                } else {
                    JOptionPane.showInputDialog("Ocurrio un error al modificar");
                }
                
                con.close();
            } catch (Exception e) {
                JOptionPane.showInputDialog("Error: " + e.toString());
            }
        } else {
            JOptionPane.showInputDialog("Seleccione un elemento de la tabla para poder realizar el cambio");
        }
        
        actualizarTabla();
    }//GEN-LAST:event_bModificarActionPerformed

    private void tabReferenciasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabReferenciasMouseClicked
        PreparedStatement ps = null;
        ResultSet rs = null;
        try {
            Conexion connection = new Conexion();
            Connection con = connection.getConexion();
            
            int Fila = tabReferencias.getSelectedRow();
            String codigo = tabReferencias.getValueAt(Fila, 0).toString();
            
            ps = con.prepareStatement("SELECT id_referencia, id_texto_actual, id_texto_destino FROM referencia WHERE id_referencia = ?");
            ps.setInt(1, Integer.parseInt(codigo));
            rs = ps.executeQuery();
            
            while (rs.next()) {
                tIDReferencia.setText(rs.getString("id_referencia"));
                tIDTexActual.setText(rs.getString("id_texto_actual"));
                tIDTexReferenciado.setText(rs.getString("id_texto_destino"));
            }
            
            con.close();
        } catch (SQLException ex) {
            JOptionPane.showInputDialog("Ocurrio un error: " + ex.toString());
        }
    }//GEN-LAST:event_tabReferenciasMouseClicked

    public void actualizarTabla() {
        try {
            DefaultTableModel modelo = new DefaultTableModel();
            tabReferencias.setModel(modelo);
            
            PreparedStatement ps = null;
            ResultSet rs = null;
            Conexion connection = new Conexion();
            Connection con = connection.getConexion();
            
            String sql = "SELECT id_referencia, id_texto_actual, id_texto_destino FROM referencia";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            
            ResultSetMetaData rsMd = rs.getMetaData();
            int cantidadColumnas = rsMd.getColumnCount();
            modelo.addColumn("ID Referencia");
            modelo.addColumn("ID Texto Actual");
            modelo.addColumn("ID Texto Referenciado");
            
            while(rs.next()) {
                Object[] filas = new Object[cantidadColumnas]; //ya que la tabla trabaja con objetos, metemos todo en objetos
                
                for (int i=0; i < cantidadColumnas; i++) {
                    filas[i] = rs.getObject(i + 1);
                }
                
                modelo.addRow(filas);
            }
            
            con.close();
            
        } catch (SQLException ex) {
            JOptionPane.showInputDialog("Error:" + ex);
        }
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaMod_BusReferencias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaMod_BusReferencias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaMod_BusReferencias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaMod_BusReferencias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaMod_BusReferencias().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bBuscar;
    private javax.swing.JButton bCerrar;
    private javax.swing.JButton bModificar;
    private javax.swing.JComboBox<String> comboColumnas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField tBuscar;
    private javax.swing.JTextField tIDReferencia;
    private javax.swing.JTextField tIDTexActual;
    private javax.swing.JTextField tIDTexReferenciado;
    private javax.swing.JTable tabReferencias;
    // End of variables declaration//GEN-END:variables
}
